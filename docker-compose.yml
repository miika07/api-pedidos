version: '3'
services:
    # Serviço para o banco de dados
    mongodb:
        image: mongo:latest
        environment:
            MONGO_INITDB_ROOT_USERNAME: fiap
            MONGO_INITDB_ROOT_PASSWORD: password
        restart: always
        ports:
            - "27017:27017"
        networks:
            - tech-challenge-rede
        volumes:
            - mongo_data:/data/db
            - ./src/infra/data/database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
        healthcheck:
            test: ["CMD", "mongo", "--username", "fiap", "--password", "password", "--eval", "db.adminCommand('ping')"]
            interval: 20s
            timeout: 10s
            retries: 5 

    # Serviço para o mongo-express (painel de uso do mongo)
    mongo-express:
        image: mongo-express:latest
        container_name: mongo-express
        restart: always
        ports:
            - "8081:8081"
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: fiap
            ME_CONFIG_MONGODB_ADMINPASSWORD: password
            ME_CONFIG_MONGODB_SERVER: mongodb
        networks:
            - tech-challenge-rede

    # Serviço para o backend em nodejs
    node-app:
        container_name: fiap-backend
        build:
            context: .
            dockerfile: Dockerfile
        command: sh -c "npm run build:run"
        ports:
            - "3000:3000"
        networks:
            - tech-challenge-rede
        volumes:
            - /usr/src/app
        depends_on:
            mongodb:
                condition: service_healthy
        restart: on-failure
volumes:
    mongo_data:
networks:
    tech-challenge-rede:
        driver: bridge